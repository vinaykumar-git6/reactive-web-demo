image: docker:19.03.8
services:
  - docker:19.03.8-dind

stages:
  - build
  - test
  - release
  - deploy

variables:
  # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

before_script:
  - chmod a+x ./mvnw
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build:
  stage: build
  script:
    - docker build --pull -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE
    
#test:
 # stage: test
  #script:
   # - docker build -t vinaykumar6/reactive-web-demo-aws-test -f Dockerfile.dev .
    
release-image:
  stage: release
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - master
    
deploy:
    stage: deploy
    environment: production
    # Pull docker image
    image: vinaykumar6/reactive-web-demo-aws
    image: mongo:latest
    # Setup AWS CLI to have proper credential keys
    before_script:
        - 'mkdir ~/.aws/'
        - 'touch ~/.aws/credentials'
        - 'printf "[eb-cli]\naws_access_key_id = %s\naws_secret_access_key = %s\n" "$AWS_ACCESS_KEY_ID" "$AWS_SECRET_ACCESS_KEY" >> ~/.aws/credentials'
    # Run deployment using EB CLI deploy on master branch
    script:
        - 'git checkout master'
        - 'eb deploy $AWS_EB_ENVIRONMENT'
    # Ensure to run deployment only on master branch
    only:
        - master